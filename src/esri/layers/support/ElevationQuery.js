// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.4/esri/copyright.txt for details.

define(["require","exports","dojo/promise/all","dojo/_base/lang","../../core/promiseUtils","../../core/Error","../../geometry/Point","../../geometry/Multipoint","../../geometry/Polyline","../../geometry/support/webMercatorUtils","../../geometry/support/scaleUtils","./ElevationTile"],function(e,t,n,o,r,i,l,a,u,s,c,f){Object.defineProperty(t,"__esModule",{value:!0});var p=function(){function e(){}return e.prototype.queryAll=function(e,t,n){var l=this;if(e=n&&n.ignoreInvisibleLayers?e.filter(function(e){return e.visible}):e.slice(),!e.length)return r.reject(new i("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from"));var a=y.fromGeometry(t),u=!1;return n&&n.returnSampleInfo||(u=!0),n=o.mixin({},n,{returnSampleInfo:!0,demResolution:"auto"}),this.query(e[e.length-1],a,n).then(function(t){return l._queryAllNext(e,t,n)}).then(function(e){return e.geometry=e.geometry["export"](),u&&delete e.sampleInfo,e})},e.prototype._queryAllNext=function(e,t,n){var o=this,i=e.pop();if(t.geometry.coordinates.forEach(function(e,n){t.sampleInfo[n].demResolution>=0&&!t.sampleInfo[n].source&&(t.sampleInfo[n].source=i)}),!e.length)return r.resolve(t);for(var l=t.geometry.coordinates,a=[],u=[],s=0;s<l.length;s++)t.sampleInfo[s].demResolution<0&&(a.push(l[s]),u.push(s));if(0===a.length)return r.resolve(t);var c=t.geometry.clone(a);return this.query(e[e.length-1],c,n).then(function(r){return u.forEach(function(e,n){l[e].z=r.geometry.coordinates[n].z,t.sampleInfo[e].demResolution=r.sampleInfo[n].demResolution}),o._queryAllNext(e,t,n)})},e.prototype.query=function(e,t,n){var l=this;if(!e)return r.reject(new i("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from"));if(!t||!(t instanceof y)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)return r.reject(new i("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation"));n=o.mixin({noDataValue:0,demResolution:"auto",maximumAutoTileRequests:20,returnSampleInfo:!1},n);var a={layer:e,geometry:null,options:n,outsideExtentTile:null,outSpatialReference:t.spatialReference};return r.resolve().then(function(){return e.load()}).then(function(){return l._createGeometryDescriptor(a,t)}).then(function(){return l._selectTiles(a)}).then(function(){return l._populateElevationTiles(a)}).then(function(){return l._sampleGeometryWithElevation(a)}).then(function(){return l._createQueryResult(a)})},e.prototype._createQueryResult=function(e){var t;t=e.outSpatialReference.equals(e.geometry.spatialReference)?e.geometry:e.geometry.project(e.outSpatialReference);var n={geometry:t["export"](),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(function(e){e.tile=null,e.elevationTile=null}),n},e.prototype._createGeometryDescriptor=function(e,t){var n,o=e.layer.tileInfo.spatialReference;return(n=t instanceof y?t.project(o):s.project(t,o))?(e.geometry=y.fromGeometry(n),r.resolve()):r.reject(new i("elevation-query:spatial-reference-mismatch","Cannot query elevation in '"+t.spatialReference.wkid+"' on an elevation service in '"+o.wkid+"'"))},e.prototype._selectTiles=function(e){var t=e.options.demResolution;return this._preselectOutsideLayerExtent(e),"number"==typeof t?this._selectTilesClosestResolution(e):"finest-contiguous"===t?this._selectTilesFinestContiguous(e):"auto"===t?this._selectTilesAuto(e):r.reject(new i("elevation-query:invalid-dem-resolution","Invalid dem resolution value '"+t+'\', expected a number, "finest-contiguous" or "auto"'))},e.prototype._preselectOutsideLayerExtent=function(e){var t=new f.ElevationTile(null);t.sample=function(t,n){return e.options.noDataValue},e.outsideExtentTile=t;var n=e.layer.fullExtent;e.geometry.coordinates.forEach(function(e){var o=e.x,r=e.y;(o<n.xmin||o>n.xmax||r<n.ymin||r>n.ymax)&&(e.elevationTile=t)})},e.prototype._selectTilesClosestResolution=function(e){var t=e.layer.tileInfo,n=this._findNearestDemResolutionLevel(t,e.options.demResolution);return e.geometry.coordinates.forEach(function(e){e.tile=t.tileAt(n,e.x,e.y)}),r.resolve()},e.prototype._findNearestDemResolutionLevel=function(e,t){for(var n=c.getUnitValueForSR(e.spatialReference),o=t/n,r=e.lods[0],i=1;i<e.lods.length;i++){var l=e.lods[i];Math.abs(l.resolution-o)<Math.abs(r.resolution-o)&&(r=l)}return r.level},e.prototype._selectTilesFinestContiguous=function(e){return this._selectTilesFinestContiguousAt(e,e.layer.tileInfo.lods.length-1)},e.prototype._selectTilesFinestContiguousAt=function(e,t){var o=this,i=e.layer,l=e.geometry;if(0>t)return l.coordinates.forEach(function(e){return e.tile=null}),r.resolve();var a=i.tilemapCache,u=i.tileInfo,s=u.lods[t];l.coordinates.forEach(function(e){e.tile=u.tileAt(s.level,e.x,e.y)});var c,f=this._selectTilesToFetch(l.coordinates);return c=a?n(f.map(function(e){return a.fetchAvailability(e.level,e.row,e.col)})):this._populateElevationTiles(e).then(function(){return l.coordinates.some(function(e){return!e.elevationTile})?(l.coordinates.filter(function(t){return t.elevationTile!==e.outsideExtentTile}).forEach(function(e){return e.elevationTile=null}),r.reject()):void 0}),c.then(function(){return l}).otherwise(function(){return o._selectTilesFinestContiguousAt(e,t-1)})},e.prototype._populateElevationTiles=function(e){var t=e.options.noDataValue,n=this._selectTilesToFetch(e.geometry.coordinates),o={},i=n.map(function(n){return e.layer.fetchTile(n.level,n.row,n.col,t).then(function(e){return o[n.id]=new f.ElevationTile(n,e)})});return r.eachAlways(i).then(function(){e.geometry.coordinates.forEach(function(e){!e.elevationTile&&e.tile&&(e.elevationTile=o[e.tile.id])})})},e.prototype._selectTilesToFetch=function(e){var t={},n=[];return e.forEach(function(e){var o=e.tile;e.elevationTile||!e.tile||t[o.id]||(t[o.id]=o,n.push(o))}),n},e.prototype._selectTilesAuto=function(e){var t=e.geometry.coordinates;this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);var o=e.layer.tilemapCache;if(o){var r=this._selectTilesToFetch(t),i={},l=r.map(function(e){var t={id:null,level:0,row:0,col:0,extent:[0,0,0,0]};return o.fetchAvailabilityUpsample(e.level,e.row,e.col,t).then(function(){return i[e.id]=t}).otherwise(function(){})});return n(l).then(function(){return t.forEach(function(e){return e.tile=i[e.tile.id]})})}return this._selectTilesAutoPrefetchUpsample(e)},e.prototype._reduceTilesForMaximumRequests=function(e){var t=e.geometry.coordinates,n=e.layer.tileInfo,o=0,r={},i=function(e){e.id in r?r[e.id]++:(r[e.id]=1,o++)},l=function(e){var t=r[e.id];1===t?(delete r[e.id],o--):r[e.id]=t-1};t.forEach(function(e){e.tile&&!e.elevationTile&&i(e.tile)});for(var a=!0;a;){a=!1;for(var u=0;u<t.length;u++){var s=t[u];if(!s.elevationTile||s.tile){if(o<=e.options.maximumAutoTileRequests)return;l(s.tile),n.upsampleTile(s.tile)&&(a=!0),i(s.tile)}}if(!a)break}},e.prototype._selectTilesAutoFinest=function(e){var t=e.geometry.coordinates,n=e.layer.tileInfo,o=n.lods[n.lods.length-1].level;t.forEach(function(e){return e.tile=n.tileAt(o,e.x,e.y)})},e.prototype._selectTilesAutoPrefetchUpsample=function(e){var t=this,n=e.geometry.coordinates,o=e.layer.tileInfo;return this._populateElevationTiles(e).then(function(){var r=!1;return n.forEach(function(e){!e.elevationTile&&e.tile&&(o.upsampleTile(e.tile)?r=!0:e.tile=null)}),r?t._selectTilesAutoPrefetchUpsample(e):void 0})},e.prototype._sampleGeometryWithElevation=function(e){e.geometry.coordinates.forEach(function(t){var n=t.elevationTile,o=e.options.noDataValue;if(n){var r=n.sample(t.x,t.y);void 0!==r?o=r:t.elevationTile=null}t.z=o})},e.prototype._extractSampleInfo=function(e){var t=e.layer.tileInfo,n=c.getUnitValueForSR(t.spatialReference);return e.geometry.coordinates.map(function(o){var r=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){var i=t.lodAt(o.elevationTile.tile.level);r=i.resolution*n}return{demResolution:r}})},e}();t.ElevationQuery=p;var y=function(){function e(){}return e.prototype["export"]=function(){return this._exporter(this.coordinates,this.spatialReference)},e.prototype.clone=function(t){var n=this,o=new e;return o.geometry=this.geometry,o.spatialReference=this.spatialReference,o.coordinates=t||this.coordinates.map(function(e){return n._cloneCoordinate(e)}),o._exporter=this._exporter,o},e.prototype.project=function(e){var t=this;if(this.spatialReference.equals(e))return this.clone();if(s.canProject(this.spatialReference,e)){var n=e.isWGS84?s.xyToLngLat:s.lngLatToXY,o=[0,0],r=this.coordinates.map(function(e){var r=t._cloneCoordinate(e);return n(r.x,r.y,!1,o),r.x=o[0],r.y=o[1],r}),i=this.clone(r);return i.spatialReference=e,i}return null},e.prototype._cloneCoordinate=function(e){return{x:e.x,y:e.y,z:e.z,tile:null,elevationTile:null}},e.fromGeometry=function(t){var n=new e;if(n.geometry=t,n.spatialReference=t.spatialReference,t instanceof e)n.coordinates=t.coordinates.map(function(e){return n._cloneCoordinate(e)}),n._exporter=function(e,n){var o=t.clone(e);return o.spatialReference=n,o};else switch(t.type){case"point":var o=t;t.hasM?n.coordinates=[{x:o.x,y:o.y,m:o.m}]:n.coordinates=[{x:o.x,y:o.y}],n._exporter=function(e,n){return t.hasM?new l(e[0].x,e[0].y,e[0].z,e[0].m,n):new l(e[0].x,e[0].y,e[0].z,n)};break;case"multipoint":var r=t;n.coordinates=r.points.map(function(e){if(t.hasM){var n=t.hasZ?3:2;return{x:e[0],y:e[1],m:e[n]}}return{x:e[0],y:e[1]}}),n._exporter=function(e,n){return t.hasM?new a({points:e.map(function(e){return[e.x,e.y,e.z,e.m]}),hasZ:!0,hasM:!0,spatiaReference:n}):new a(e.map(function(e){return[e.x,e.y,e.z]}),n)};break;case"polyline":var i=t,s=[],c=[],f=0;i.paths.forEach(function(e){c.push([f,f+e.length]),f+=e.length,s.push.apply(s,e.map(function(e){if(t.hasM){var n=t.hasZ?3:2;return{x:e[0],y:e[1],m:e[n]}}return{x:e[0],y:e[1]}}))}),n.coordinates=s,n._exporter=function(e,n){var o=t.hasM?e.map(function(e){return[e.x,e.y,e.z,e.m]}):e.map(function(e){return[e.x,e.y,e.z]}),r=c.map(function(e){return o.slice(e[0],e[1])});return new u({paths:r,hasM:t.hasM,hasZ:!0,spatialReference:n})}}return n},e}();t.GeometryDescriptor=y,t["default"]=p});